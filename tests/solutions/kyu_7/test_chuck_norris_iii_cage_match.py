"""Chuck Norris III - Cage Match"""

import pytest

from solutions.kyu_7.chuck_norris_iii_cage_match import head_smash

EXAMPLES = (
    ('arg', 'expected'),
    [
        (
        [
        '*****************************************',
        '**  _O_   *   _O_   *   _O_   *   _O_  **',
        '** /(.)J  *  C(.)J  *  /(.)J  *  C(.)J **',
        '** _| |_  *  _| |_  *  _( )_  *  _( )_ *'],
        [
        '*****************************************',
        '**  _ _   *   _ _   *   _ _   *   _ _  **',
        '** /(.)J  *  C(.)J  *  /(.)J  *  C(.)J **',
        '** _| |_  *  _| |_  *  _( )_  *  _( )_ *']),
        (
        [
        '***  _O_   **   _O_   **   _O_   **   _O_  ***',
        '*** /(.)J  **  /(.)J  **  C(.)J  **  C(.)J ***',
        '*** _| |_  **  _| |_  **  _| |_  **  _( )_ **'],
        [
        '***  _ _   **   _ _   **   _ _   **   _ _  ***',
        '*** /(.)J  **  /(.)J  **  C(.)J  **  C(.)J ***',
        '*** _| |_  **  _| |_  **  _| |_  **  _( )_ **']),
        (
        [
        '*****************************************',
        '***********   _O_   *   _O_   ***********',
        '**  _O_   *  /(.)J  *  /(.)J  *   _O_  **',
        '** /(.)J  *  _| |_  *  _( )_  *  /(.)J **',
        '** _( )_  *********************  _( )_ **',
        '******************* X ******************'],
        [
        '*****************************************',
        '***********   _ _   *   _ _   ***********',
        '**  _ _   *  /(.)J  *  /(.)J  *   _ _  **',
        '** /(.)J  *  _| |_  *  _( )_  *  /(.)J **',
        '** _( )_  *********************  _( )_ **',
        '******************* X ******************']),
        (
        [
        '*****************************************',
        '***********   _O_   *   _O_   ***********',
        '**  _O_   *  C(.)J  *  /(.)J  *   _O_  **',
        '** /(.)J  *  _| |_  *  _/ )_  *  C(.)J **',
        '** _/ )_  *********************  _/ |_ **',
        '******************* X *******************',
        '**********************  _O_  ************',
        '**  _O_   *   _O_   *  /(.)J  *   _O_  **',
        '** /(.)J  *  C(.)J  *  _/ )_  *  C(.)J **',
        '** _( )_  *  _| |_  ***********  _/ |_ **',
        '****************************************'],
        [
        '*****************************************',
        '***********   _ _   *   _ _   ***********',
        '**  _ _   *  C(.)J  *  /(.)J  *   _ _  **',
        '** /(.)J  *  _| |_  *  _/ )_  *  C(.)J **',
        '** _/ )_  *********************  _/ |_ **',
        '******************* X *******************',
        '**********************  _ _  ************',
        '**  _ _   *   _ _   *  /(.)J  *   _ _  **',
        '** /(.)J  *  C(.)J  *  _/ )_  *  C(.)J **',
        '** _( )_  *  _| |_  ***********  _/ |_ **',
        '****************************************']),
    ]
)


@pytest.mark.parametrize(*EXAMPLES)
def test_returns_correct_result(arg, expected):
    assert head_smash(arg) == expected
